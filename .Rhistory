addPolygons(data = polygon_trans, color = "blue")%>%
addCircleMarkers(data=bus_station_chapinero , col="red")%>%
addCircleMarkers(data=housing_chapinero , col="green" , label=housing_chapinero$title, radius= 0.25)
addLayersControl(
baseGroups = c("Open Street", "World Imagery")
)
map
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("UPZ Chapinero, Bogota"))
## objeto osm
osm = opq(bbox = getbb("UPZ Chapinero, Bogota")) %>%
add_osm_feature(key="amenity" , value="bus_station")
class(osm)
## extraer Simple Features Collection
osm_sf = osm %>% osmdata_sf()
osm_sf
## Obtener un objeto sf
bus_station = osm_sf$osm_points %>% select(osm_id,amenity)
bus_station
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("UPZ Chapinero, Bogota"))
## objeto osm
osm2 = opq(bbox = getbb("UPZ Chapinero, Bogota")) %>%
add_osm_feature(key="amenity" , value="park")
class(osm2)
## extraer Simple Features Collection
osm_sf2 = osm2 %>% osmdata_sf()
osm_sf2
## Obtener un objeto sf
parks = osm_sf2$osm_points %>% select(osm_id,amenity)
parks
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("UPZ Chapinero, Bogota"))
## objeto osm
osm2 = opq(bbox = getbb("UPZ Chapinero, Bogota")) %>%
add_osm_feature(key="amenity" , value="park")
class(osm2)
## extraer Simple Features Collection
osm_sf2 = osm2 %>% osmdata_sf()
osm_sf2
View(osm_sf2)
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("UPZ Chapinero, Bogota"))
## objeto osm
osm2 = opq(bbox = getbb("UPZ Chapinero, Bogota")) %>%
add_osm_feature(key="leisure" , value="park")
class(osm2)
## extraer Simple Features Collection
osm_sf2 = osm2 %>% osmdata_sf()
osm_sf2
## Obtener un objeto sf
parks = osm_sf2$osm_points %>% select(osm_id,leisure)
parks
View(osm_sf2)
View(osm_sf)
View(osm_sf2)
## Obtener un objeto sf
parks = osm_sf2$osm_polygons %>% select(osm_id,leisure)
parks
## Pintar las estaciones de autobus, la localidad y los aptos
map <- leaflet() %>%
addTiles(group = "Open Street")%>%
addPolygons(data = polygon_trans, color = "blue")%>%
addCircleMarkers(data=bus_station_chapinero , col="red")%>%
addCircleMarkers(data=parks , col="green")%>%
addCircleMarkers(data=housing_chapinero , col="yellow" , label=housing_chapinero$title, radius= 0.25)
addLayersControl(
baseGroups = c("Open Street", "World Imagery")
)
map
bus_station_chapinero <- st_intersection(polygon_trans, bus_station)
parks_chapinero <- st_intersection(polygon_trans, parks)
## Pintar las estaciones de autobus, la localidad y los aptos
map <- leaflet() %>%
addTiles(group = "Open Street")%>%
addPolygons(data = polygon_trans, color = "blue")%>%
addCircleMarkers(data=bus_station_chapinero , col="red")%>%
addCircleMarkers(data=parks_chapinero , col="green")%>%
addCircleMarkers(data=housing_chapinero , col="yellow" , label=housing_chapinero$title, radius= 0.25)
addLayersControl(
baseGroups = c("Open Street", "World Imagery")
)
map
View(parks_chapinero)
View(bus_station_chapinero)
## Pintar las estaciones de autobus, la localidad y los aptos
map <- leaflet() %>%
addTiles(group = "Open Street")%>%
addPolygons(data = polygon_trans, color = "blue")%>%
addCircleMarkers(data=bus_station_chapinero , col="red")%>%
addPolygons(data=parks_chapinero , col="green")%>%
addCircleMarkers(data=housing_chapinero , col="yellow" , label=housing_chapinero$title, radius= 0.25)
addLayersControl(
baseGroups = c("Open Street", "World Imagery")
)
map
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("UPZ Chapinero, Bogota"))
## objeto osm
osm3 = opq(bbox = getbb("UPZ Chapinero, Bogota")) %>%
add_osm_feature(key="amenity" , value="malls")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## Obtener un objeto sf
malls = osm_sf3$osm_polygons %>% select(osm_id,amenity)
malls
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("UPZ Chapinero, Bogota"))
## objeto osm
osm3 = opq(bbox = getbb("UPZ Chapinero, Bogota")) %>%
add_osm_feature(key="amenity" , value="marketplace")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## Obtener un objeto sf
marketplace = osm_sf3$osm_polygons %>% select(osm_id,amenity)
marketplace
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("UPZ Chapinero, Bogota"))
## objeto osm
osm3 = opq(bbox = getbb("UPZ Chapinero, Bogota")) %>%
add_osm_feature(key="amenity" , value="bar")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## Obtener un objeto sf
bar = osm_sf3$osm_polygons %>% select(osm_id,amenity)
bar
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("UPZ Chapinero, Bogota"))
## objeto osm
osm3 = opq(bbox = getbb("UPZ Chapinero, Bogota")) %>%
add_osm_feature(key="amenity" , value="bar")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## Obtener un objeto sf
bar = osm_sf3$osm_points %>% select(osm_id,amenity)
bar
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("UPZ Chapinero, Bogota"))
## objeto osm
osm3 = opq(bbox = getbb("UPZ Chapinero, Bogota")) %>%
add_osm_feature(key="amenity" , value="food_court")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## Obtener un objeto sf
food_court = osm_sf3$osm_points %>% select(osm_id,amenity)
food_court
View(food_court)
bus_station_chapinero <- st_intersection(polygon_trans, bus_station)
parks_chapinero <- st_intersection(polygon_trans, parks)
food_court_chapinero <- st_intersection(polygon_trans, food_court)
## Pintar las estaciones de autobus, la localidad y los aptos
map <- leaflet() %>%
addTiles(group = "Open Street")%>%
addPolygons(data = polygon_trans, color = "blue")%>%
addCircleMarkers(data=bus_station_chapinero , col="red")%>%
addCircleMarkers(data=food_court_chapinero , col="brown")%>%
addPolygons(data=parks_chapinero , col="green")%>%
addCircleMarkers(data=housing_chapinero , col="yellow" , label=housing_chapinero$title, radius= 0.25)
addLayersControl(
baseGroups = c("Open Street", "World Imagery")
)
map
poblado <- getbb(place_name = "Comuna 14 - El Poblado",
featuretype = "boundary:administrative",
format_out = "sf_polygon") %>% .$multipolygon
## convertir en sf
housing_pob <- st_as_sf(x=train_final_poblado,coords=c("lon","lat"),crs=4326)
housing_poblado <-  st_intersection(polygon_trans, housing_pob)
class(housing_poblado)
poblado <- getbb(place_name = "Comuna 14 - El Poblado",
featuretype = "boundary:administrative",
format_out = "sf_polygon") %>% .$multipolygon
## convertir en sf
housing_pob <- st_as_sf(x=train_final_poblado,coords=c("lon","lat"),crs=4326)
housing_poblado <-  st_intersection(polygon_trans, housing_pob)
class(housing_poblado)
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="bus_station")
class(osm)
## extraer Simple Features Collection
osm_sf = osm %>% osmdata_sf()
osm_sf
## Obtener un objeto sf
bus_station_medellin = osm_sf$osm_points %>% select(osm_id,amenity)
bus_station_medellin
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm2 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="leisure" , value="park")
class(osm2)
## extraer Simple Features Collection
osm_sf2 = osm2 %>% osmdata_sf()
View(osm_sf2)
## Obtener un objeto sf
parks_medellin = osm_sf2$osm_polygons %>% select(osm_id,leisure)
parks_medellin
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm3 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="food_court")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## Obtener un objeto sf
food_court_medellin = osm_sf3$osm_points %>% select(osm_id,amenity)
food_court_medellin
bus_station_poblado <- st_intersection(poblado, bus_station_medellin)
parks_poblado <- st_intersection(poblado, parks_medellin)
food_court_poblado <- st_intersection(poblado, food_court_medellin)
## Pintar las estaciones de autobus, la localidad y los aptos
map_poblado <- leaflet() %>%
addTiles(group = "Open Street")%>%
addPolygons(data = poblado, color = "blue")%>%
addCircleMarkers(data=bus_station_poblado , col="red")%>%
addCircleMarkers(data=food_court_poblado , col="brown")%>%
addPolygons(data=parks_poblado , col="green")%>%
addCircleMarkers(data=housing_poblado , col="yellow" , label=housing_poblado$title, radius= 0.25)
addLayersControl(
baseGroups = c("Open Street", "World Imagery")
)
map_poblado
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm3 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="marketplace")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## Obtener un objeto sf
food_court_medellin = osm_sf3$osm_points %>% select(osm_id,amenity)
food_court_medellin
## obtener la caja de coordenada que contiene el polígono de El Poblado
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm3 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="food_court")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## obtener la caja de coordenada que contiene el polígono de El Poblado
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm3 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="marketplace")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## obtener la caja de coordenada que contiene el polígono de El Poblado
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm3 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="foodcourt")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## obtener la caja de coordenada que contiene el polígono de El Poblado
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm3 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="nightclub")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## Obtener un objeto sf
nightclub_medellin = osm_sf3$osm_points %>% select(osm_id,amenity)
nightclub_medellin
## obtener la caja de coordenada que contiene el polígono de El Poblado
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm3 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="food_court")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## obtener la caja de coordenada que contiene el polígono de El Poblado
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm3 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="food_court")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## Obtener un objeto sf
food_court_medellin = osm_sf3$osm_points %>% select(osm_id,amenity)
food_court_medellin
## Obtener un objeto sf
food_court_medellin = osm_sf3$osm_points %>% select(osm_id,amenity)
food_court_medellin
bus_station_poblado <- st_intersection(poblado, bus_station_medellin)
parks_poblado <- st_intersection(poblado, parks_medellin)
food_court_poblado <- st_intersection(poblado, food_court_medellin)
poblado <- getbb(place_name = "Comuna 14 - El Poblado",
featuretype = "boundary:administrative",
format_out = "sf_polygon") %>% .$multipolygon
## convertir en sf
housing_pob <- st_as_sf(x=train_final_poblado,coords=c("lon","lat"),crs=4326)
housing_poblado <-  st_intersection(polygon_trans, housing_pob)
class(housing_poblado)
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="bus_station")
class(osm)
## extraer Simple Features Collection
osm_sf = osm %>% osmdata_sf()
osm_sf
## Obtener un objeto sf
bus_station_medellin = osm_sf$osm_points %>% select(osm_id,amenity)
bus_station_medellin
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm2 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="leisure" , value="park")
class(osm2)
## extraer Simple Features Collection
osm_sf2 = osm2 %>% osmdata_sf()
osm_sf2
## Obtener un objeto sf
parks_medellin = osm_sf2$osm_polygons %>% select(osm_id,leisure)
parks_medellin
## obtener la caja de coordenada que contiene el polígono de El Poblado
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm3 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="food_court")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## Obtener un objeto sf
food_court_medellin = osm_sf3$osm_points %>% select(osm_id,amenity)
food_court_medelli
food_court_medellin = osm_sf3$osm_points %>% select(osm_id,amenity)
food_court_medellin
bus_station_poblado <- st_intersection(poblado, bus_station_medellin)
parks_poblado <- st_intersection(poblado, parks_medellin)
food_court_poblado <- st_intersection(poblado, food_court_medellin)
class(poblado)
poblado <- getbb(place_name = "Comuna 14 - El Poblado",
featuretype = "boundary:administrative",
format_out = "sf_polygon") %>% .$multipolygon
class(poblado)
poblado <- getbb(place_name = "Comuna 14 - El Poblado",
featuretype = "boundary:administrative",
format_out = "sf_polygon")
class(poblado)
poblado <- getbb(place_name = "Comuna 14 - El Poblado",
featuretype = "boundary:administrative",
format_out = "sf_polygon")
class(poblado)
## convertir en sf
housing_pob <- st_as_sf(x=train_final_poblado,coords=c("lon","lat"),crs=4326)
housing_poblado <-  st_intersection(polygon_trans, housing_pob)
class(housing_poblado)
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="bus_station")
class(osm)
## extraer Simple Features Collection
osm_sf = osm %>% osmdata_sf()
osm_sf
## Obtener un objeto sf
bus_station_medellin = osm_sf$osm_points %>% select(osm_id,amenity)
bus_station_medellin
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm2 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="leisure" , value="park")
class(osm2)
## extraer Simple Features Collection
osm_sf2 = osm2 %>% osmdata_sf()
osm_sf2
## Obtener un objeto sf
parks_medellin = osm_sf2$osm_polygons %>% select(osm_id,leisure)
parks_medellin
## obtener la caja de coordenada que contiene el polígono de El Poblado
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm3 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="food_court")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## Obtener un objeto sf
food_court_medellin = osm_sf3$osm_points %>% select(osm_id,amenity)
food_court_medellin
class(poblado)
bus_station_poblado <- st_intersection(poblado, bus_station_medellin)
parks_poblado <- st_intersection(poblado, parks_medellin)
food_court_poblado <- st_intersection(poblado, food_court_medellin)
## Pintar las estaciones de autobus, la localidad y los aptos
map_poblado <- leaflet() %>%
addTiles(group = "Open Street")%>%
addPolygons(data = poblado, color = "blue")%>%
addCircleMarkers(data=bus_station_poblado , col="red")%>%
addCircleMarkers(data=food_court_poblado , col="brown")%>%
addPolygons(data=parks_poblado , col="green")%>%
addCircleMarkers(data=housing_poblado , col="yellow" , label=housing_poblado$title, radius= 0.25)
addLayersControl(
baseGroups = c("Open Street", "World Imagery")
)
map_poblado
View(housing_poblado)
poblado <- getbb(place_name = "Comuna 14 - El Poblado",
featuretype = "boundary:administrative",
format_out = "sf_polygon")
class(poblado)
## convertir en sf
housing_pob <- st_as_sf(x=train_final_poblado,coords=c("lon","lat"),crs=4326)
housing_poblado <-  st_intersection(poblado, housing_pob)
class(housing_poblado)
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="bus_station")
class(osm)
## extraer Simple Features Collection
osm_sf = osm %>% osmdata_sf()
osm_sf
## Obtener un objeto sf
bus_station_medellin = osm_sf$osm_points %>% select(osm_id,amenity)
bus_station_medellin
## obtener la caja de coordenada que contiene el polígono de Bogotá
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm2 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="leisure" , value="park")
class(osm2)
## extraer Simple Features Collection
osm_sf2 = osm2 %>% osmdata_sf()
osm_sf2
## Obtener un objeto sf
parks_medellin = osm_sf2$osm_polygons %>% select(osm_id,leisure)
parks_medellin
## obtener la caja de coordenada que contiene el polígono de El Poblado
opq(bbox = getbb("Comuna 14 - El Poblado"))
## objeto osm
osm3 = opq(bbox = getbb("Comuna 14 - El Poblado")) %>%
add_osm_feature(key="amenity" , value="food_court")
class(osm2)
## extraer Simple Features Collection
osm_sf3 = osm3 %>% osmdata_sf()
osm_sf3
## Obtener un objeto sf
food_court_medellin = osm_sf3$osm_points %>% select(osm_id,amenity)
food_court_medellin
class(poblado)
bus_station_poblado <- st_intersection(poblado, bus_station_medellin)
parks_poblado <- st_intersection(poblado, parks_medellin)
food_court_poblado <- st_intersection(poblado, food_court_medellin)
## Pintar las estaciones de autobus, la localidad y los aptos
map_poblado <- leaflet() %>%
addTiles(group = "Open Street")%>%
addPolygons(data = poblado, color = "blue")%>%
addCircleMarkers(data=bus_station_poblado , col="red")%>%
addCircleMarkers(data=food_court_poblado , col="brown")%>%
addPolygons(data=parks_poblado , col="green")%>%
addCircleMarkers(data=housing_poblado , col="yellow" , label=housing_poblado$title, radius= 0.25)
addLayersControl(
baseGroups = c("Open Street", "World Imagery")
)
map_poblado
View(housing_poblado)
View(housing_pob)
poblado <- getbb(place_name = "Comuna 14 - El Poblado",
featuretype = "boundary:administrative",
format_out = "sf_polygon")
class(poblado)
View(poblado)
## Pintar las estaciones de autobus, la localidad y los aptos
map <- leaflet() %>%
addTiles(group = "Open Street")%>%
addPolygons(data = polygon_trans, color = "blue")%>%
addCircleMarkers(data=bus_station_chapinero , col="red")%>%
addCircleMarkers(data=food_court_chapinero , col="brown")%>%
addPolygons(data=parks_chapinero , col="green")%>%
addCircleMarkers(data=housing_chapinero , col="yellow" , label=housing_chapinero$title, radius= 0.25)
addLayersControl(
baseGroups = c("Open Street", "World Imagery")
)
map
